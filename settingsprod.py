"""
Django settings for mapchecrm_django project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
#import dotenv
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nes9=s+y+n_$ko5(xsxiba=qu8x%f$gntln1k08e5$n9s18&(0'

# STRIPE
STRIPE_PUB_KEY = 'pk_test_51NIt1uAK8IvkifNkVgryzdK2EBF0UR2utHehxc8AnKunCIntPAZmF1hJMBiymnJB6QPMapIBHIRpZDmjAfL0gNvW00LqnQCSNS'
STRIPE_SECRET_KEY = 'sk_test_51NIt1uAK8IvkifNkc53MHYiZZyZRWiMRsMXuLRucUNgvSPm9LiNXF1X5fYtVtuIEa11CFvHZI7amftiwf1vNKQAf00ypRQ7t0E'
STRIPE_WEBHOOK_KEY = 'whsec_d2d1cb0d6589e016ee287ea5ec7d9fab55d0a244ee711e560b09f8f9325181d4'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'www.mapchi.com',
    'mapchi.com',
    'api.mapchi.com',
    'staging.mapchi.com',
    'prometheus1001.myqnapcloud.com',
    '143.110.174.196',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'token',
    ]

CORS_ALLOW_ALL_ORIGINS = True


CSRF_TRUSTED_ORIGINS = [
  'https://api.mapchi.com'
]

#uncomment when ready to go live
#CORS_ALLOWED_ORIGINS = [
#    'http://localhost:8500',
#    'http://localhost:8000',
#    'http://localhost:3000',
#    'http://192.168.1.53:3000',
#    'http://192.168.1.53:8500',
#    'http://192.168.1.53:8000',
#]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
#        'rest_framework.authentication.BasicAuthentication',  #remove when done only for postman
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    #Django Rest Framework user model
    'accounts.apps.AccountsConfig',
    'userprofile.apps.UserprofileConfig',
    'search.apps.SearchConfig',
    'leads.apps.LeadsConfig',
    'shopper.apps.ShopperConfig',
    #Mobile verification
    'verification.apps.VerificationConfig',
    #'contact',
    'sms.apps.SmsConfig',
    'api_database.apps.ApiDatabaseConfig',
    'vendor.apps.VendorConfig',
    # All different types of business packages, main package to control mapchi users
    'business.apps.BusinessConfig',
    'products.apps.ProductsConfig',
    'django_crontab',

]

#configure Djoser
#if DJANGO_ENV == 'staging':
#DOMAIN = 'staging.mapchi.com'
#else:
#    DOMAIN = 'www.mapchi.com'
#DOMAIN = 'www.mapchi.com'        #will change to mapchi.com

#Changes /one place to make changes
#ACCEPTATION_URL = 'http://192.168.1.53:8500/auth/register'
#STRIPE_BILLING_URL ='http://192.168.1.53:8500/admin/subscription'
#DOMAIN = '192.168.1.53:8500'

ACCEPTATION_URL = 'https://staging.mapchi.com/auth/register'
STRIPE_BILLING_URL = "https://staging.mapchi.com/admin/subscription"
DOMAIN = 'staging.mapchi.com'
SITE_NAME = "mapchi"

DJOSER = {
    "LOGIN_FIELD":  "username",
    'SEND_CONFIRMATION_EMAIL': True,
    "SEND_ACTIVATION_EMAIL": True,
    "PASSWORD_CHANGED_EMAIL_CONFIRMATION": True,
    "ACTIVATION_URL": "accounts/users/activation/{uid}/{token}",
    "PASSWORD_RESET_CONFIRM_URL": "accounts/users/reset_password_confirm/{uid}/{token}",
    'EMAIL': {
        'activation': 'accounts.email.ActivationEmail',
        'confirmation': 'accounts.email.ConfirmationEmail',
        'password_reset': 'accounts.email.PasswordResetEmail',
        'password_changed_confirmation': 'accounts.email.PasswordChangedConfirmationEmail',
    },
    'SERIALIZERS': {
        'token_create': 'accounts.serializers.CustomTokenCreateSerializer',
    },
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


#SECURE_CROSS_ORIGIN_OPENER_POLICY = None  # only to send email from widget

ROOT_URLCONF = 'mapchecrm_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mapchecrm_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'mapchi',
        'USER': 'mapchiuser',
        'PASSWORD': 'mapchipassword',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'mapchitest',
#        'USER': 'doadmin',
#        'PASSWORD': 'AVNS_GfGhvDKi-x10owg7LBJ',
#        'PASSWORD': 'AVNS_GfGhvDKi-x1Oowg7lBJ', 
#        'HOST': 'private-db-mapchi-lon1-01-do-user-14203090-0.b-db.ondigitalocean.com',
#        'HOST': 'db-mapchi-lon1-01-do-user-14203090-0.b.db.ondigitalocean.com',
#        'PORT': '25060',
#        'sslmode': 'require'
#        'sslrootcert': '/webapps/mapchi/environment_3_8_2/mapchicrm_django/ca_certificate.crt'
#    }
#}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

#MEDIA_URL = '/media/'
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DEFAULT_FROM_EMAIL = 'mapchi.com <noreply@mapchi.com>'


#Email Services
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'smtp.office365.com'
#EMAIL_USE_TLS = True
#EMAIL_PORT = 587
#EMAIL_HOST_USER = 'admin@mapchi.com'
#EMAIL_HOST_PASSWORD = 'Willem1@.Olivier2@.3456'


#Email Test Service Mailtrap
#EMAIL_HOST = 'smtp.mailtrap.io'
#EMAIL_HOST_USER = '8f8885d74dea6a'
#EMAIL_HOST_PASSWORD = 'a563825016058d'
#EMAIL_PORT = '2525'

#Email Test Service MailSnag  Bluejuice
#EMAIL_HOST = 'smtp.mailsnag.com'
#EMAIL_HOST_USER = 'ZJfiODEgC54m'
#EMAIL_HOST_PASSWORD = 'HukLxHbX8Dxs'
#EMAIL_PORT = '2525'
#EMAIL_USE_TLS = True

#Email Test Service MailSnag David
EMAIL_HOST = 'smtp.mailsnag.com'
EMAIL_HOST_USER = '5wXY4Vmpl0zz'
EMAIL_HOST_PASSWORD = 'BH1FS68o76c4'
EMAIL_PORT = '2525'
EMAIL_USE_TLS = True

# Cron Job / Automte reports for users daily and weekly
##CRONJOBS = [
##    ('0 */12 * * *', 'vendor.management.commands.fetch_data', '> /tmp/fetch_data.log'),
    # The above cron job will run the management command every 12 hours
##]
##testing before go live
#CRONJOBS = [
#    ('*/1 * * * *', 'vendor.management.commands.fetch_data', '> /tmp/fetch_data.log'),
    # The above cron job will run the management command every 1 minute
#]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(STATIC_ROOT, 'django.log'),  # Specify the path to your log file
        },
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],  # Add the 'console' handler to capture errors to the console
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
